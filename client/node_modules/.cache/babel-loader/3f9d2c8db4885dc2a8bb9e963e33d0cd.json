{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/login/Login.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport history from '../../history';\nimport { LoginForm } from './LoginForm';\nimport io from 'socket.io-client';\nimport constants from './../../constants'; // import {useSelector, useDispatch} from 'react-redux'\n\nexport const Login = () => {\n  const loginData = useSelector(state => state.loginForm);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const token = sessionStorage['authToken'];\n    if (token) fetch(`${constants.backendUrl}/authenticate-token`, {\n      headers: {\n        'Content-Type': 'Application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(console.log);\n  }, []);\n\n  const handleLogin = e => {\n    e.preventDefault();\n    fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage['authToken']}`\n      },\n      body: JSON.stringify({\n        username: loginData.username,\n        password: loginData.password,\n        rememberUser: loginData.checkedBox\n      })\n    }).then(res => res.json()).then(res => {\n      if (res.data) {\n        dispatch({\n          type: 'SAVE_USER_DATA',\n          data: res.data\n        });\n        if (typeof res.token !== 'undefined') sessionStorage.setItem('authToken', res.token);\n        dispatch({\n          type: 'LOGIN_FORM_CHANGE',\n          key: 'formSubmitted',\n          value: false\n        });\n        const socket = io.connect(constants.backendUrl, {\n          'query': 'token=' + res.token\n        });\n        dispatch({\n          type: 'SAVE_SOCKET',\n          socket: socket\n        });\n        history.push('/');\n      } else {\n        console.log(res.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"login-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Welcome, please log in or register below.\"), /*#__PURE__*/React.createElement(LoginForm, {\n    loginData: loginData,\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/login/Login.js"],"names":["React","useEffect","useDispatch","useSelector","history","LoginForm","io","constants","Login","loginData","state","loginForm","dispatch","token","sessionStorage","fetch","backendUrl","headers","then","res","json","console","log","handleLogin","e","preventDefault","method","localStorage","body","JSON","stringify","username","password","rememberUser","checkedBox","data","type","setItem","key","value","socket","connect","push","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport history from '../../history'\nimport { LoginForm } from './LoginForm'\nimport io from 'socket.io-client';\nimport constants from './../../constants'\n// import {useSelector, useDispatch} from 'react-redux'\n\nexport const Login = () => {\n    const loginData = useSelector(state => state.loginForm)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const token = sessionStorage['authToken']\n        if(token)\n            fetch(`${constants.backendUrl}/authenticate-token`, {\n                headers: {\n                    'Content-Type': 'Application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            }).then((res) => res.json())\n            .then(console.log)\n    }, [])\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:5000/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage['authToken']}`\n            },\n            body: JSON.stringify({\n                username: loginData.username,\n                password: loginData.password,\n                rememberUser: loginData.checkedBox\n            })\n        }).then(res => res.json())\n        .then(res => {\n            if(res.data){\n                dispatch({type: 'SAVE_USER_DATA', data: res.data})\n                if(typeof(res.token) !== 'undefined') sessionStorage.setItem('authToken', res.token)\n                dispatch({type: 'LOGIN_FORM_CHANGE', key: 'formSubmitted', value: false})\n                const socket = io.connect(constants.backendUrl, {\n                    'query': 'token=' + res.token\n                });\n                dispatch({type: 'SAVE_SOCKET', socket: socket})\n                history.push('/')\n            }else{\n                console.log(res.message)\n            }\n        })\n    }\n\n    return (\n        <div id=\"loginContainer\">\n            <p id=\"login-text\">Welcome, please log in or register below.</p>\n            <LoginForm \n                loginData={loginData} \n                handleLogin={handleLogin} \n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}