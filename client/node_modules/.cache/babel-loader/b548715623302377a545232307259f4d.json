{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/home/Home.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // to handle state\n\nimport { Header, Icon, Segment } from 'semantic-ui-react'; // imports the semantic components\n\nimport { Statistics } from './Statistics'; // statistics component\n\nimport { useSocket } from './../../hooks/useSocket';\nexport const Home = () => {\n  const dispatch = useDispatch(); // getting all of your friends from state\n\n  const fetchedFriends = useSelector(state => state.friends.fetchedFriends);\n  const socket = useSocket();\n  useEffect(() => {\n    if (socket === false) // makes sure the friends aren't fetched already\n      if (!fetchedFriends) {\n        // sends a request to get all the friends and waits for the server to send a response\n        socket.emit('get-friends').on('get-friends', data => {\n          console.log(data);\n          console.log(data);\n          console.log(data);\n          console.log(data);\n          console.log(data); // saves the fetched friends to the state\n\n          dispatch({\n            type: 'UPDATE_FRIEND_LIST',\n            friends: data\n          });\n        });\n      }\n  }, [socket]); // renders the home page\n  // if(token !== null)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    icon: true,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"teal\",\n    name: \"user\",\n    circular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Profile\")), /*#__PURE__*/React.createElement(Segment, {\n    id: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Statistics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }))); // else{\n  // displays a loader if the fetch request hasn't been made yet\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui active red elastic large loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }\n  }); // }\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/home/Home.js"],"names":["React","useEffect","useDispatch","useSelector","Header","Icon","Segment","Statistics","useSocket","Home","dispatch","fetchedFriends","state","friends","socket","emit","on","data","console","log","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAAuD;;AACvD,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,mBAAtC,C,CAA0D;;AAC1D,SAASC,UAAT,QAA2B,cAA3B,C,CAA0C;;AAC1C,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CADsB,CAEtB;;AACA,QAAMS,cAAc,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,cAAxB,CAAlC;AAEA,QAAMG,MAAM,GAAGN,SAAS,EAAxB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGa,MAAM,KAAK,KAAd,EACA;AACA,UAAG,CAACH,cAAJ,EAAmB;AACf;AACAG,QAAAA,MAAM,CACLC,IADD,CACM,aADN,EAECC,EAFD,CAEI,aAFJ,EAEoBC,IAAD,IAAU;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EALyB,CAMzB;;AACAP,UAAAA,QAAQ,CAAC;AAACU,YAAAA,IAAI,EAAE,oBAAP;AAA6BP,YAAAA,OAAO,EAAEI;AAAtC,WAAD,CAAR;AACH,SAVD;AAWH;AACJ,GAjBQ,EAiBN,CAACH,MAAD,CAjBM,CAAT,CAPsB,CA0BtB;AACA;;AACI,sBACI;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,eAKI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ,CA5BkB,CAuCtB;AACI;;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAzCkB,CA0CtB;AACH,CA3CM","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux' // to handle state\nimport { Header, Icon, Segment } from 'semantic-ui-react' // imports the semantic components\nimport { Statistics } from './Statistics' // statistics component\nimport { useSocket } from './../../hooks/useSocket'\n\nexport const Home = () => {\n    const dispatch = useDispatch()\n    // getting all of your friends from state\n    const fetchedFriends = useSelector(state => state.friends.fetchedFriends)\n\n    const socket = useSocket()\n    \n    useEffect(() => {\n        if(socket === false)\n        // makes sure the friends aren't fetched already\n        if(!fetchedFriends){\n            // sends a request to get all the friends and waits for the server to send a response\n            socket\n            .emit('get-friends')\n            .on('get-friends', (data) => {\n                console.log(data)\n                console.log(data)\n                console.log(data)\n                console.log(data)\n                console.log(data)\n                // saves the fetched friends to the state\n                dispatch({type: 'UPDATE_FRIEND_LIST', friends: data})\n            })    \n        }\n    }, [socket])\n\n    // renders the home page\n    // if(token !== null)\n        return (\n            <div id=\"home-container\">\n                <Header as='h2' icon textAlign='center'>\n                <Icon color='teal' name='user' circular />\n                    <Header.Content>Profile</Header.Content>\n                </Header>\n                <Segment id=\"stats-container\">\n                    <Statistics />\n                </Segment>\n            </div>\n        )\n    // else{\n        // displays a loader if the fetch request hasn't been made yet\n        return <div className=\"ui active red elastic large loader\"></div>\n    // }\n}"]},"metadata":{},"sourceType":"module"}