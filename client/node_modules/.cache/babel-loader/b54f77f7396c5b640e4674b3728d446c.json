{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/friends/FriendsSearch.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // to handle state change\n\nimport { Dropdown, Search, Icon } from 'semantic-ui-react'; // imports components from semantic ui\n\nimport { SearchResultRenderer } from './SearchResultRenderer'; // this is a single search result\n\nimport { useSocket } from './../../hooks/useSocket';\nexport const FriendsSearch = () => {\n  const dispatch = useDispatch();\n  const friends = useSelector(state => state.friends); // the friends state\n\n  const user = useSelector(state => state.user); // the user state\n\n  const socket = useSocket();\n  useEffect(() => {\n    if (socket !== false) {}\n  }, [user]); // runs when you type new data in the search component\n\n  const handleSearchChange = searchInput => {\n    if (searchInput !== friends.search.value || searchInput === false) {\n      if (searchInput !== '') {\n        socket.emit('search', {\n          value: searchInput,\n          filter: friends.search.filter\n        });\n      } else dispatch({\n        type: 'SEARCH_USER_CHANGE',\n        object: {\n          results: []\n        }\n      });\n    }\n  }; // runs when the add friend button gets pressed\n\n\n  const addFriend = friend => socket.emit('add-friend', friend); // runs when a result gets pressed\n\n\n  const handleResultSelect = (e, {\n    result\n  }) => {\n    const clickedFriend = result; // if the pressed item is the add friend button: adds a friend\n\n    if (e.target.id === 'addFriendBtn') {\n      addFriend({ ...clickedFriend,\n        id: clickedFriend.key\n      });\n      dispatch({\n        type: 'CLEAR_SEARCH_STATE'\n      });\n    } else {\n      // else logs the friend to the console\n      console.log(result);\n    }\n  }; // the filter options\n\n\n  const options = [{\n    text: 'username',\n    value: 'username'\n  }, {\n    text: 'full name',\n    value: \"fullName\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"friends-search-cont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    id: \"friends-search-bar\",\n    loading: friends.search.value === '' ? false : friends.search.isLoading,\n    onResultSelect: handleResultSelect,\n    onSearchChange: e => {\n      dispatch({\n        type: 'SEARCH_USER_CHANGE',\n        object: {\n          'value': e.target.value,\n          'isLoading': true\n        }\n      });\n      handleSearchChange(e.target.value);\n    },\n    results: friends.search.results,\n    value: friends.search.value,\n    fluid: true,\n    resultRenderer: friend => /*#__PURE__*/React.createElement(SearchResultRenderer, {\n      friend: friend,\n      friendList: friends.friendList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }\n    }),\n    icon: /*#__PURE__*/React.createElement(Icon, {\n      name: \"search\",\n      color: \"teal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    id: \"friend-search-dropdown\",\n    onChange: (e, res) => dispatch({\n      type: 'SEARCH_USER_CHANGE',\n      object: {\n        filter: res.value\n      }\n    }),\n    options: options,\n    selection: true,\n    icon: /*#__PURE__*/React.createElement(Icon, {\n      style: {\n        position: 'absolute',\n        right: 5\n      },\n      name: \"caret down\",\n      color: \"teal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }),\n    defaultValue: \"username\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/friends/FriendsSearch.js"],"names":["React","useEffect","useDispatch","useSelector","Dropdown","Search","Icon","SearchResultRenderer","useSocket","FriendsSearch","dispatch","friends","state","user","socket","handleSearchChange","searchInput","search","value","emit","filter","type","object","results","addFriend","friend","handleResultSelect","e","result","clickedFriend","target","id","key","console","log","options","text","isLoading","friendList","res","position","right"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux' // to handle state change\nimport { Dropdown, Search, Icon } from 'semantic-ui-react' // imports components from semantic ui\nimport { SearchResultRenderer } from './SearchResultRenderer' // this is a single search result\nimport { useSocket } from './../../hooks/useSocket'\n\nexport const FriendsSearch = () => {\n    const dispatch = useDispatch()\n    const friends = useSelector(state => state.friends) // the friends state\n    const user = useSelector(state => state.user) // the user state\n    const socket = useSocket()\n\n    useEffect(() => {\n        if (socket !== false) {\n\n        }\n    }, [user])\n\n    // runs when you type new data in the search component\n    const handleSearchChange = (searchInput) => {\n        if(searchInput !== friends.search.value || searchInput === false){\n            if(searchInput !== ''){\n                socket.emit('search', {value: searchInput, filter: friends.search.filter})\n            }else\n                dispatch({type: 'SEARCH_USER_CHANGE', object: {results: []}})\n        }\n    }\n\n    // runs when the add friend button gets pressed\n    const addFriend = (friend) => socket.emit('add-friend', friend)\n\n    // runs when a result gets pressed\n    const handleResultSelect = (e, {result}) => {\n        const clickedFriend = result\n        // if the pressed item is the add friend button: adds a friend\n        if(e.target.id === 'addFriendBtn'){\n            addFriend({...clickedFriend, id: clickedFriend.key})\n            dispatch({type: 'CLEAR_SEARCH_STATE'})\n        }else{\n            // else logs the friend to the console\n            console.log(result)\n        }\n    }\n\n    // the filter options\n    const options = [{text: 'username', value: 'username'}, {text: 'full name', value: \"fullName\"}]\n\n    return (\n        <div id=\"friends-search-cont\">\n            <Search \n                id='friends-search-bar'\n                loading={friends.search.value === ''  ? false : friends.search.isLoading}\n                onResultSelect={handleResultSelect}\n                onSearchChange={(e) => {\n                    dispatch({type: 'SEARCH_USER_CHANGE', object: {'value': e.target.value, 'isLoading': true}})\n                    handleSearchChange(e.target.value)\n                }\n                }\n                results={friends.search.results}\n                value={friends.search.value}\n                fluid\n                resultRenderer={(friend) => <SearchResultRenderer friend={friend} friendList={friends.friendList}/>}\n                icon={ <Icon name='search' color='teal'/> }\n            />  \n            \n            <Dropdown \n                id=\"friend-search-dropdown\"\n                onChange = {(e, res) => dispatch({type: 'SEARCH_USER_CHANGE', object:{filter: res.value}})}  \n                options={options} \n                selection \n                icon={\n                    <Icon style={{position: 'absolute', right: 5}} name='caret down' color='teal'/>\n                }\n                defaultValue='username'\n                color='teal'\n            />\n     \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}