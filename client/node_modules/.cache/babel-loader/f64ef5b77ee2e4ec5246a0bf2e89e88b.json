{"ast":null,"code":"import { createStore } from 'redux';\n\nconst reducer = (currentState, action) => {\n  switch (action.type) {\n    case 'UPDATE_STATE':\n      return { ...currentState,\n        ...action.state\n      };\n\n    case 'LOGIN_FORM_CHANGE':\n      return { ...currentState,\n        loginForm: { ...currentState.loginForm,\n          [action.key]: action.value\n        }\n      };\n\n    case 'SAVE_USER_DATA':\n      return { ...currentState,\n        user: { ...currentState.userData,\n          ...action.data\n        }\n      };\n\n    case 'SEARCH_USER_CHANGE':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          search: { ...currentState.friends.search,\n            ...action.object\n          }\n        }\n      };\n\n    case 'CLEAR_SEARCH_STATE':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          search: { ...initialState.friends.search\n          }\n        }\n      };\n\n    case 'UPDATE_FRIEND_LIST':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          fetchedFriends: true,\n          friendList: action.friends\n        }\n      };\n\n    case 'CHANGE_FRIEND_STATUS':\n      const updatedFriendlist = currentState.friends.friendList.map(friend => friend.id === action.friendID ? { ...friend,\n        status: action.status\n      } : friend);\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          friendList: updatedFriendlist\n        }\n      };\n\n    case 'ACTIVE_FRIENDS_TAB':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          activeTab: action.state\n        }\n      };\n\n    default:\n      break;\n  }\n\n  return currentState;\n};\n\nconst initialState = {\n  currentPage: '/',\n  user: {\n    id: null,\n    username: '',\n    email: '',\n    first_name: '',\n    last_name: ''\n  },\n  loginForm: {\n    username: '',\n    password: '',\n    stayLoggedIn: false,\n    checkedBox: false,\n    formSubmitted: false\n  },\n  friends: {\n    search: {\n      isLoading: false,\n      results: [],\n      value: \"\",\n      filter: '&&filter=none'\n    },\n    fetchedFriends: false,\n    friendList: [],\n    activeTab: 'Friends'\n  }\n};\nexport const store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/Store.js"],"names":["createStore","reducer","currentState","action","type","state","loginForm","key","value","user","userData","data","friends","search","object","initialState","fetchedFriends","friendList","updatedFriendlist","map","friend","id","friendID","status","activeTab","currentPage","username","email","first_name","last_name","password","stayLoggedIn","checkedBox","formSubmitted","isLoading","results","filter","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","sourcesContent":["import { createStore } from 'redux'\n\nconst reducer = (currentState, action) => {\n    switch (action.type){\n        case 'UPDATE_STATE': \n            return {\n                ...currentState,\n                ...action.state\n            }\n        case 'LOGIN_FORM_CHANGE':\n            return {\n                ...currentState,\n                loginForm: {\n                    ...currentState.loginForm,\n                    [action.key]: action.value\n                }\n            }\n        case 'SAVE_USER_DATA':\n            return {\n                ...currentState,\n                user: {\n                    ...currentState.userData,\n                    ...action.data\n                }\n            }\n        case 'SEARCH_USER_CHANGE':\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    search: {\n                        ...currentState.friends.search,\n                        ...action.object\n                    }\n                },\n            }\n        case 'CLEAR_SEARCH_STATE':\n            return {\n                ...currentState,\n\n                friends: {\n                        ...currentState.friends,\n                    search: {\n                        ...initialState.friends.search\n                    } \n                }\n            }\n        case 'UPDATE_FRIEND_LIST':\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    fetchedFriends: true,\n                    friendList: action.friends\n                }\n            }\n        case 'CHANGE_FRIEND_STATUS':\n            const updatedFriendlist = currentState.friends.friendList.map(friend => \n                friend.id === action.friendID \n                ? {...friend, status: action.status}\n                : friend\n            )\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    friendList: updatedFriendlist\n                }\n            }\n        case 'ACTIVE_FRIENDS_TAB':\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    activeTab: action.state\n                }\n            }\n        default:\n            break ;\n    }\n    return currentState\n}\n\nconst initialState = {\n    currentPage: '/',\n    user: {\n        id: null,\n        username: '',\n        email: '',\n        first_name: '',\n        last_name: ''\n    },\n    loginForm: {\n        username: '',\n        password: '',\n        stayLoggedIn: false,\n        checkedBox: false,\n        formSubmitted: false\n    },\n    friends: {\n        search: {\n            isLoading: false,\n            results: [],\n            value: \"\",\n            filter: '&&filter=none'\n        },\n        fetchedFriends: false,\n        friendList: [],\n        activeTab: 'Friends'\n    }\n}\n\nexport const store = createStore(\n    reducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)"]},"metadata":{},"sourceType":"module"}