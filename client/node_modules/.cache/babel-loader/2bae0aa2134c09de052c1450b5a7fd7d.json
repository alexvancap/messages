{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/friends/FriendActionModal.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Dropdown, Form, Header, Icon, Modal, TextArea } from 'semantic-ui-react';\nimport constants from './../../constants';\nexport const FriendActionModal = props => {\n  const dispatch = useDispatch();\n  const [actionMode, setActionMode] = useState(null);\n  const friendsState = useSelector(state => state.friends);\n  const userID = useSelector(state => state.user);\n  const activeTab = useSelector(state => state.friends.activeTab);\n  const actionOptions = [{\n    key: 1,\n    text: 'unfriend',\n    value: -1\n  }, {\n    key: 2,\n    text: 'block',\n    value: 2\n  }, {\n    key: 3,\n    text: 'report',\n    value: 3\n  }];\n  const pendingActionOptions = [{\n    key: 1,\n    text: 'cancel request',\n    value: -1\n  }, {\n    key: 2,\n    text: 'block',\n    value: 2\n  }];\n\n  const handleActionSubmit = () => {\n    fetch(`${constants.backendUrl}/change-friend-status/${actionMode}/${props.friend.id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage['authToken']}`\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.success) dispatch({\n        type: 'CHANGE_FRIEND_STATUS',\n        friendID: props.friend.id,\n        status: actionMode\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: props.openModal,\n    basic: true,\n    style: {\n      maxWidth: 380\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    icon: \"remove user\",\n    content: \"Edit relationship\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Content, {\n    style: {\n      marginTop: -20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Please select the action(s) you want to take with \", props.friend.username, /*#__PURE__*/React.createElement(Form, {\n    id: \"act-mod-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    id: \"act-mod-drop-down\",\n    clearable: true,\n    options: activeTab === 'Pending' ? pendingActionOptions : actionOptions,\n    selection: true,\n    onChange: (e, input) => setActionMode(input.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }), actionMode === 3 ? /*#__PURE__*/React.createElement(TextArea, {\n    id: \"act-mod-text-area\",\n    placeholder: \"Please define the reason of the report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }) : null)), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    basic: true,\n    color: \"red\",\n    inverted: true,\n    onClick: () => props.setOpenModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"remove\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), \" Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    inverted: true,\n    onClick: () => {\n      handleActionSubmit();\n      props.setOpenModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), \" Confirm\")));\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/friends/FriendActionModal.js"],"names":["React","useState","useDispatch","useSelector","Button","Dropdown","Form","Header","Icon","Modal","TextArea","constants","FriendActionModal","props","dispatch","actionMode","setActionMode","friendsState","state","friends","userID","user","activeTab","actionOptions","key","text","value","pendingActionOptions","handleActionSubmit","fetch","backendUrl","friend","id","headers","localStorage","then","res","json","success","type","friendID","status","openModal","maxWidth","marginTop","username","e","input","setOpenModal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Dropdown, Form, Header, Icon, Modal, TextArea } from 'semantic-ui-react'\nimport constants from './../../constants'\n\nexport const FriendActionModal = (props) => {\n    const dispatch = useDispatch()\n    const [actionMode, setActionMode] = useState(null)\n    const friendsState = useSelector(state => state.friends)\n    const userID = useSelector(state => state.user)\n    const activeTab = useSelector(state => state.friends.activeTab)\n\n    const actionOptions = [\n        {key: 1, text: 'unfriend', value: -1},\n        {key: 2, text: 'block', value: 2},\n        {key: 3, text: 'report', value: 3}\n    ]\n\n    const pendingActionOptions = [\n        {key: 1, text: 'cancel request', value: -1},\n        {key: 2, text: 'block', value: 2},\n    ]\n\n    const handleActionSubmit = () => {\n        fetch(`${constants.backendUrl}/change-friend-status/${actionMode}/${props.friend.id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage['authToken']}`,\n            }\n        }).then(res => res.json())\n        .then(res => {\n            if(res.success)\n                dispatch({type: 'CHANGE_FRIEND_STATUS', friendID : props.friend.id, status: actionMode})\n            }\n        )\n    }\n\n    return (\n        <Modal \n            open={props.openModal}\n            basic style={{maxWidth: 380}}\n        >\n            <Header icon='remove user' content='Edit relationship' />\n            <Modal.Content style={{marginTop: -20}}>\n                Please select the action(s) you want to take with {props.friend.username}\n\n                    <Form id=\"act-mod-form\">\n                        <Dropdown \n                            id='act-mod-drop-down'\n                            clearable \n                            options={activeTab === 'Pending' ?  pendingActionOptions : actionOptions} \n                            selection \n                            onChange={\n                                (e, input) => setActionMode(input.value)\n                            }\n                        />\n                        {actionMode === 3 \n                            ? \n                                <TextArea id='act-mod-text-area' \n                                    placeholder='Please define the reason of the report'\n                                />\n                            : \n                                null\n                        }\n                    </Form>\n            </Modal.Content>\n            <Modal.Actions>\n            <Button \n                basic color='red' inverted\n                onClick={() => \n                    props.setOpenModal(false)\n                }\n            >\n                <Icon name='remove' /> Cancel\n            </Button>\n            <Button color='teal' inverted\n                onClick={() => {\n                    handleActionSubmit()\n                    props.setOpenModal(false)\n                }}\n            >\n                <Icon name='checkmark' /> Confirm\n            </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n}"]},"metadata":{},"sourceType":"module"}