{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/login/Login.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport history from '../../history';\nimport { LoginForm } from './LoginForm';\nimport io from 'socket.io-client'; // import {useSelector, useDispatch} from 'react-redux'\n\nexport const Login = () => {\n  const loginData = useSelector(state => state.loginForm);\n  const dispatch = useDispatch();\n  const socket = useSelector(state => state.socket); // useEffect(() => {\n  //     socket.on(\"unauthorized\", function(error, callback) {\n  //         if (error.data.type === \"UnauthorizedError\" || error.data.code === \"invalid_token\") {\n  //             // redirect user to login page perhaps or execute callback:\n  //             callback();\n  //             console.log(\"User's token has expired\");\n  //         }\n  // }, [])\n  // .on('connected', () => {\n  //     socket.on('get-user-data', (data) => {\n  //         dispatch({type: 'SAVE_USER_DATA', data: data[0]})\n  //         history.push('/')\n  //     })\n  // })\n  // Call our fetch function below once the component mounts\n  // fetch('/express_backend')\n  //     .then(res => res.json())\n  //     .then(res => dispatch({type: 'UPDATE_DATA', data: res.express}))\n  // }, [])\n\n  const handleLogin = e => {\n    e.preventDefault();\n    fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage['authToken']}`\n      },\n      body: JSON.stringify({\n        username: loginData.username,\n        password: loginData.password,\n        rememberUser: loginData.checkedBox\n      })\n    }).then(res => res.json()).then(res => {\n      if (res.data) {\n        dispatch({\n          type: 'SAVE_USER_DATA',\n          data: res.data\n        });\n        if (typeof res.token !== 'undefined') sessionStorage.setItem('authToken', res.token);\n        dispatch({\n          type: 'LOGIN_FORM_CHANGE',\n          key: 'formSubmitted',\n          value: false\n        });\n        const socket = io.connect(constants.backendUrl, {\n          'query': 'token=' + res.token\n        });\n        dispatch({\n          type: 'SAVE_SOCKET',\n          socket: socket\n        });\n        history.push('/');\n      } else {\n        console.log(res.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"login-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Welcome, please log in or register below.\"), /*#__PURE__*/React.createElement(LoginForm, {\n    loginData: loginData,\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/login/Login.js"],"names":["React","useEffect","useDispatch","useSelector","history","LoginForm","io","Login","loginData","state","loginForm","dispatch","socket","handleLogin","e","preventDefault","fetch","method","headers","localStorage","body","JSON","stringify","username","password","rememberUser","checkedBox","then","res","json","data","type","token","sessionStorage","setItem","key","value","connect","constants","backendUrl","push","console","log","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CACA;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACvB,QAAMC,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA7B;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACG,MAAhB,CAA1B,CAHuB,CAIvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AAEJ;;AAEA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASC,YAAY,CAAC,WAAD,CAAc;AAFhD,OAFwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,QAAQ,EAAEf,SAAS,CAACe,QADH;AAEjBC,QAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAFH;AAGjBC,QAAAA,YAAY,EAAEjB,SAAS,CAACkB;AAHP,OAAf;AAN2B,KAAhC,CAAL,CAWGC,IAXH,CAWQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXf,EAYCF,IAZD,CAYMC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACE,IAAP,EAAY;AACRnB,QAAAA,QAAQ,CAAC;AAACoB,UAAAA,IAAI,EAAE,gBAAP;AAAyBD,UAAAA,IAAI,EAAEF,GAAG,CAACE;AAAnC,SAAD,CAAR;AACA,YAAG,OAAOF,GAAG,CAACI,KAAX,KAAsB,WAAzB,EAAsCC,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoCN,GAAG,CAACI,KAAxC;AACtCrB,QAAAA,QAAQ,CAAC;AAACoB,UAAAA,IAAI,EAAE,mBAAP;AAA4BI,UAAAA,GAAG,EAAE,eAAjC;AAAkDC,UAAAA,KAAK,EAAE;AAAzD,SAAD,CAAR;AACA,cAAMxB,MAAM,GAAGN,EAAE,CAAC+B,OAAH,CAAWC,SAAS,CAACC,UAArB,EAAiC;AAC5C,mBAAS,WAAWX,GAAG,CAACI;AADoB,SAAjC,CAAf;AAGArB,QAAAA,QAAQ,CAAC;AAACoB,UAAAA,IAAI,EAAE,aAAP;AAAsBnB,UAAAA,MAAM,EAAEA;AAA9B,SAAD,CAAR;AACAR,QAAAA,OAAO,CAACoC,IAAR,CAAa,GAAb;AACH,OATD,MASK;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACe,OAAhB;AACH;AACJ,KAzBD;AA0BH,GA5BD;;AA8BA,sBACI;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,eAEI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAEnC,SADf;AAEI,IAAA,WAAW,EAAEK,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AASH,CAhEM","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport history from '../../history'\nimport { LoginForm } from './LoginForm'\nimport io from 'socket.io-client';\n// import {useSelector, useDispatch} from 'react-redux'\n\nexport const Login = () => {\n    const loginData = useSelector(state => state.loginForm)\n    const dispatch = useDispatch()\n    const socket = useSelector(state => state.socket)\n    // useEffect(() => {\n    //     socket.on(\"unauthorized\", function(error, callback) {\n    //         if (error.data.type === \"UnauthorizedError\" || error.data.code === \"invalid_token\") {\n    //             // redirect user to login page perhaps or execute callback:\n    //             callback();\n    //             console.log(\"User's token has expired\");\n    //         }\n    // }, [])\n            // .on('connected', () => {\n            //     socket.on('get-user-data', (data) => {\n            //         dispatch({type: 'SAVE_USER_DATA', data: data[0]})\n            //         history.push('/')\n            //     })\n            // })\n        // Call our fetch function below once the component mounts\n        // fetch('/express_backend')\n        //     .then(res => res.json())\n        //     .then(res => dispatch({type: 'UPDATE_DATA', data: res.express}))\n\n    // }, [])\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:5000/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage['authToken']}`\n            },\n            body: JSON.stringify({\n                username: loginData.username,\n                password: loginData.password,\n                rememberUser: loginData.checkedBox\n            })\n        }).then(res => res.json())\n        .then(res => {\n            if(res.data){\n                dispatch({type: 'SAVE_USER_DATA', data: res.data})\n                if(typeof(res.token) !== 'undefined') sessionStorage.setItem('authToken', res.token)\n                dispatch({type: 'LOGIN_FORM_CHANGE', key: 'formSubmitted', value: false})\n                const socket = io.connect(constants.backendUrl, {\n                    'query': 'token=' + res.token\n                });\n                dispatch({type: 'SAVE_SOCKET', socket: socket})\n                history.push('/')\n            }else{\n                console.log(res.message)\n            }\n        })\n    }\n\n    return (\n        <div id=\"loginContainer\">\n            <p id=\"login-text\">Welcome, please log in or register below.</p>\n            <LoginForm \n                loginData={loginData} \n                handleLogin={handleLogin} \n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}