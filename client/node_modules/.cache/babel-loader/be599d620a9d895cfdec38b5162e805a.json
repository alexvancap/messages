{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/alert/AlertContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertRenderer } from './AlertRenderer';\nimport { Transition } from 'semantic-ui-react';\nimport history from './../../'; // holds all the messages\n\nexport const AlertContainer = () => {\n  const dispatch = useDispatch(); // gets all the messages\n\n  const alerts = useSelector(state => state.alerts);\n  const socket = useSelector(state => state.socket);\n  console.log(history.location.pathName); // useEffect(() => {\n  //     socket\n  //         .emit('get-alerts')\n  //         .on('get-alerts', (res) =>{\n  //             if (res !== undefined)\n  //                 dispatch({type: 'GET_ALERTS', alerts: res})\n  //         })\n  //         .on('remove-alert', (res) => {\n  //             dispatch({type: 'REMOVE_ALERT', id: res})\n  //         })\n  //         .on('create-alert', (alert) => {\n  //             console.log(alert)\n  //         })\n  // }, [])\n\n  if (alerts === [] || alerts === undefined) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  });else return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"alert-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, alerts.map(alert => /*#__PURE__*/React.createElement(AlertRenderer, {\n    key: alert.id,\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/alert/AlertContainer.js"],"names":["React","useEffect","useDispatch","useSelector","AlertRenderer","Transition","history","AlertContainer","dispatch","alerts","state","socket","console","log","location","pathName","undefined","map","alert","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,UAApB,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CADgC,CAEhC;;AACA,QAAMO,MAAM,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B;AACA,QAAME,MAAM,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA1B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,QAAR,CAAiBC,QAA7B,EANgC,CAOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIN,MAAM,KAAK,EAAX,IAAiBA,MAAM,KAAKO,SAAhC,EACI,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,KAKI,oBACI;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMP,MAAM,CAACQ,GAAP,CAAYC,KAAK,iBACf,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,KAAK,CAACC,EAA1B;AAA8B,IAAA,KAAK,EAAED,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFN,CADJ;AAQP,CAnCM","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AlertRenderer } from './AlertRenderer'\nimport { Transition } from 'semantic-ui-react'\nimport history from './../../'\n\n// holds all the messages\nexport const AlertContainer = () => {\n    const dispatch = useDispatch()\n    // gets all the messages\n    const alerts = useSelector(state => state.alerts)\n    const socket = useSelector(state => state.socket)\n\n    console.log(history.location.pathName)\n    // useEffect(() => {\n    //     socket\n    //         .emit('get-alerts')\n    //         .on('get-alerts', (res) =>{\n    //             if (res !== undefined)\n    //                 dispatch({type: 'GET_ALERTS', alerts: res})\n    //         })\n    //         .on('remove-alert', (res) => {\n    //             dispatch({type: 'REMOVE_ALERT', id: res})\n    //         })\n    //         .on('create-alert', (alert) => {\n    //             console.log(alert)\n    //         })\n    // }, [])\n\n    if (alerts === [] || alerts === undefined)\n        return (\n            <div></div>\n        )\n    else\n        return (\n            <div id='alert-container'>\n                {/* itterates over all the massages in state and creates a message component for them*/}\n                { alerts.map( alert => \n                    <AlertRenderer key={alert.id} alert={alert} />\n                ) }\n            </div>\n        )\n}"]},"metadata":{},"sourceType":"module"}