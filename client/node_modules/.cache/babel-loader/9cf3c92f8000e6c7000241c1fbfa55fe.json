{"ast":null,"code":"import { createStore } from 'redux';\n\nconst reducer = (currentState, action) => {\n  switch (action.type) {\n    case 'UPDATE_STATE':\n      return { ...currentState,\n        ...action.state\n      };\n\n    case 'LOGIN_FORM_CHANGE':\n      return { ...currentState,\n        loginForm: { ...currentState.loginForm,\n          [action.key]: action.value\n        }\n      };\n\n    case 'SAVE_USER_DATA':\n      return { ...currentState,\n        user: { ...action.data\n        }\n      };\n\n    case 'SEARCH_USER_CHANGE':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          search: { ...currentState.friends.search,\n            ...action.object\n          }\n        }\n      };\n\n    case 'CLEAR_SEARCH_STATE':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          search: { ...initialState.friends.search\n          }\n        }\n      };\n\n    case 'UPDATE_FRIEND_LIST':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          fetchedFriends: true,\n          friendList: action.friends\n        }\n      };\n\n    case 'CHANGE_FRIEND_STATUS':\n      const updatedFriendlist = currentState.friends.friendList.map(friend => friend.userID === action.friendID ? { ...friend,\n        status: action.status\n      } : friend);\n      console.log(updatedFriendlist);\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          friendList: updatedFriendlist\n        }\n      };\n\n    case 'ACTIVE_FRIENDS_TAB':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          activeTab: action.state\n        }\n      };\n\n    case 'ADD_FRIEND':\n      return { ...currentState,\n        friends: { ...currentState.friends,\n          friendList: [...currentState.friends.friendList, action.newFriend]\n        }\n      };\n\n    case 'GET_ALERTS':\n      return { ...currentState,\n        alerts: action.alerts\n      };\n\n    case 'ADD_ALERT':\n      return { ...currentState,\n        alerts: [...currentState.user.alerts, action.alert]\n      };\n\n    case 'REMOVE_ALERT':\n      const alertsWithoutCurrent = currentState.alerts.filter(alert => alert.id !== action.id);\n      return { ...currentState,\n        alerts: alertsWithoutCurrent\n      };\n\n    default:\n      break;\n  }\n\n  return currentState;\n};\n\nconst initialState = {\n  currentPage: 'Home',\n  user: {\n    id: null,\n    username: '',\n    email: '',\n    first_name: '',\n    last_name: ''\n  },\n  loginForm: {\n    username: '',\n    password: '',\n    stayLoggedIn: false,\n    checkedBox: false,\n    formSubmitted: false\n  },\n  friends: {\n    search: {\n      isLoading: false,\n      results: [],\n      value: \"\",\n      filter: '&&filter=none'\n    },\n    fetchedFriends: false,\n    friendList: [],\n    activeTab: 'Friends'\n  },\n  alerts: [],\n  token: null\n};\nexport const store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/Store.js"],"names":["createStore","reducer","currentState","action","type","state","loginForm","key","value","user","data","friends","search","object","initialState","fetchedFriends","friendList","updatedFriendlist","map","friend","userID","friendID","status","console","log","activeTab","newFriend","alerts","alert","alertsWithoutCurrent","filter","id","currentPage","username","email","first_name","last_name","password","stayLoggedIn","checkedBox","formSubmitted","isLoading","results","token","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","sourcesContent":["import { createStore } from 'redux'\n\nconst reducer = (currentState, action) => {\n    switch (action.type){\n        case 'UPDATE_STATE': \n            return {\n                ...currentState,\n                ...action.state\n            }\n        case 'LOGIN_FORM_CHANGE':\n            return {\n                ...currentState,\n                loginForm: {\n                    ...currentState.loginForm,\n                    [action.key]: action.value\n                }\n            }\n        case 'SAVE_USER_DATA':\n            return {\n                ...currentState,\n                user: {\n                    ...action.data\n                }\n            }\n        case 'SEARCH_USER_CHANGE':\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    search: {\n                        ...currentState.friends.search,\n                        ...action.object\n                    }\n                },\n            }\n        case 'CLEAR_SEARCH_STATE':\n            return {\n                ...currentState,\n\n                friends: {\n                        ...currentState.friends,\n                    search: {\n                        ...initialState.friends.search\n                    }\n                }\n            }\n        case 'UPDATE_FRIEND_LIST':\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    fetchedFriends: true,\n                    friendList: action.friends\n                }\n            }\n        case 'CHANGE_FRIEND_STATUS':\n            const updatedFriendlist = currentState.friends.friendList.map(friend => \n                friend.userID === action.friendID \n                ? {...friend, status: action.status}\n                : friend\n            )\n            console.log(updatedFriendlist)\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    friendList: updatedFriendlist\n                }\n            }\n        case 'ACTIVE_FRIENDS_TAB':\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    activeTab: action.state\n                }\n            }\n        case 'ADD_FRIEND':\n            return {\n                ...currentState,\n                friends: {\n                    ...currentState.friends,\n                    friendList: [\n                        ...currentState.friends.friendList, action.newFriend\n                    ]\n                }\n            }\n        case 'GET_ALERTS':\n            return {\n                ...currentState,\n                alerts: action.alerts\n            }\n        case 'ADD_ALERT':\n            return {\n                ...currentState,\n                alerts: [\n                    ...currentState.user.alerts, action.alert\n                ]\n            }\n        case 'REMOVE_ALERT':\n            const alertsWithoutCurrent = currentState.alerts.filter(alert => alert.id !== action.id)\n            return {\n                ...currentState,\n                alerts: alertsWithoutCurrent\n            }\n        default:\n            break ;\n    }\n    return currentState\n}\n\nconst initialState = {\n    currentPage: 'Home',\n    user: {\n        id: null,\n        username: '',\n        email: '',\n        first_name: '',\n        last_name: ''\n    },\n    loginForm: {\n        username: '',\n        password: '',\n        stayLoggedIn: false,\n        checkedBox: false,\n        formSubmitted: false\n    },\n    friends: {\n        search: {\n            isLoading: false,\n            results: [],\n            value: \"\",\n            filter: '&&filter=none'\n        },\n        fetchedFriends: false,\n        friendList: [],\n        activeTab: 'Friends'\n    },\n    alerts: [],\n    token: null\n}\n\nexport const store = createStore(\n    reducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)"]},"metadata":{},"sourceType":"module"}