{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/friends/FriendsGrid.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabContent } from './TabContent';\nimport { Grid, Menu, Segment } from 'semantic-ui-react';\nexport const FriendsGrid = () => {\n  const dispatch = useDispatch();\n  const friendList = useSelector(state => state.friends.friendList);\n  const activeTab = useSelector(state => state.friends.activeTab);\n  const loggedInUserID = useSelector(state => state.user.id);\n  const pendingFriends = friendList.filter(friend => friend.status === 0);\n  const confirmedFriends = friendList.filter(friend => friend.status === 1);\n  const blockedFriends = friendList.filter(friend => friend.status === 2 && friend.action_user_id === loggedInUserID);\n\n  const handleTabClick = (e, {\n    name\n  }) => {\n    dispatch({\n      type: 'ACTIVE_FRIENDS_TAB',\n      state: name\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    fluid: true,\n    vertical: true,\n    tabular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    name: \"Friends\",\n    active: activeTab === 'Friends',\n    onClick: handleTabClick,\n    color: activeTab === 'Friends' ? 'teal' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Menu.Item, {\n    name: \"Pending\",\n    active: activeTab === 'Pending',\n    onClick: handleTabClick,\n    color: activeTab === 'Pending' ? 'teal' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Menu.Item, {\n    name: \"Blocked\",\n    active: activeTab === 'Blocked',\n    onClick: handleTabClick,\n    color: activeTab === 'Blocked' ? 'teal' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid.Column, {\n    stretched: true,\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    id: \"friends-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TabContent, {\n    pendingFriends: pendingFriends,\n    confirmedFriends: confirmedFriends,\n    blockedFriends: blockedFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/friends/FriendsGrid.js"],"names":["React","useSelector","useDispatch","TabContent","Grid","Menu","Segment","FriendsGrid","dispatch","friendList","state","friends","activeTab","loggedInUserID","user","id","pendingFriends","filter","friend","status","confirmedFriends","blockedFriends","action_user_id","handleTabClick","e","name","type","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { TabContent } from './TabContent'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\n\nexport const FriendsGrid = () => {\n    const dispatch = useDispatch()\n    const friendList = useSelector(state => state.friends.friendList)\n    const activeTab = useSelector(state => state.friends.activeTab)\n    const loggedInUserID = useSelector(state => state.user.id)\n    const pendingFriends = friendList.filter(friend => friend.status === 0)\n    const confirmedFriends = friendList.filter(friend => friend.status === 1)\n    const blockedFriends = friendList.filter(friend => friend.status === 2 && friend.action_user_id === loggedInUserID)\n    \n    const handleTabClick = (e, { name }) => {\n        dispatch({type: 'ACTIVE_FRIENDS_TAB', state: name})\n    }\n\n    return (\n        <Grid style={{marginTop: 30}}>\n            <Grid.Column width={3}>\n                <Menu fluid vertical tabular >\n                    <Menu.Item\n                        name='Friends'\n                        active={activeTab === 'Friends'}\n                        onClick={handleTabClick}\n                        color={activeTab === 'Friends' ? 'teal' : ''}\n                    />\n                    <Menu.Item\n                        name='Pending'\n                        active={activeTab === 'Pending'}\n                        onClick={handleTabClick}\n                        color={activeTab === 'Pending' ? 'teal' : ''}\n                    />\n                    <Menu.Item\n                        name='Blocked'\n                        active={activeTab === 'Blocked'}\n                        onClick={handleTabClick}\n                        color={activeTab === 'Blocked' ? 'teal' : ''}\n                    />\n                </Menu>\n            </Grid.Column>\n\n            <Grid.Column stretched width={12}>\n                <Segment id='friends-list-container'>\n                    <TabContent \n                        pendingFriends={pendingFriends} \n                        confirmedFriends={confirmedFriends} \n                        blockedFriends={blockedFriends}\n                    />\n                </Segment>\n            </Grid.Column>\n        </Grid>\n\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}