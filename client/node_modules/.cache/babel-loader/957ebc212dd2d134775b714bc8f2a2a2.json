{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/login/Login.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport history from '../../history';\nimport { LoginForm } from './LoginForm';\nimport socket from './../../socket.config'; // import {useSelector, useDispatch} from 'react-redux'\n\nexport const Login = () => {\n  const loginData = useSelector(state => state.loginForm);\n  const dispatch = useDispatch();\n  useEffect(() => {// Call our fetch function below once the component mounts\n    // fetch('/express_backend')\n    //     .then(res => res.json())\n    //     .then(res => dispatch({type: 'UPDATE_DATA', data: res.express}))\n  }, []);\n\n  const handleLogin = e => {\n    e.preventDefault(); // fetch('http://localhost:4000/login', {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         'Authorization': `Bearer ${localStorage['authToken']}`,\n    //         'Accept': 'application/json' ,\n    //     },\n    //     body: JSON.stringify({\n    //         username: loginData.username,\n    //         password: loginData.password,\n    //         rememberUser: loginData.checkedBox\n    //     })\n    // }).then(res => res.json())\n    // .then(res => {\n    //     if(res.data){\n    //         console.log(res.data)\n    //         dispatch({type: 'SAVE_USER_DATA', data: res.data})\n    //         if(typeof(res.token) !== 'undefined') localStorage.setItem('authToken', res.token)\n    //         dispatch({type: 'LOGIN_FORM_CHANGE', key: 'formSubmitted', value: false})\n    //         history.push('/')\n    //     }else{\n    //         console.log(res.message)\n    //     }\n    // })\n\n    socket.emit('login', {\n      username: loginData.username,\n      password: loginData.password,\n      rememberUser: loginData.checkedBox\n    }).on('login', res => {\n      console.loglog(res);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"login-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Welcome, please log in or register below.\"), /*#__PURE__*/React.createElement(LoginForm, {\n    loginData: loginData,\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/login/Login.js"],"names":["React","useEffect","useSelector","useDispatch","history","LoginForm","socket","Login","loginData","state","loginForm","dispatch","handleLogin","e","preventDefault","emit","username","password","rememberUser","checkedBox","on","res","console","loglog"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CACA;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACvB,QAAMC,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA7B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACA;AACA;AAEH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMW,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF,GADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACIR,IAAAA,MAAM,CAACS,IAAP,CAAY,OAAZ,EAAqB;AACjBC,MAAAA,QAAQ,EAAER,SAAS,CAACQ,QADH;AAEjBC,MAAAA,QAAQ,EAAET,SAAS,CAACS,QAFH;AAGjBC,MAAAA,YAAY,EAAEV,SAAS,CAACW;AAHP,KAArB,EAIGC,EAJH,CAIM,OAJN,EAIgBC,GAAD,IAAS;AAACC,MAAAA,OAAO,CAACC,MAAR,CAAeF,GAAf;AAAoB,KAJ7C;AAKP,GA/BD;;AAiCA,sBACI;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,eAEI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAEb,SADf;AAEI,IAAA,WAAW,EAAEI,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AASH,CArDM","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport history from '../../history'\nimport { LoginForm } from './LoginForm'\nimport socket from './../../socket.config'\n// import {useSelector, useDispatch} from 'react-redux'\n\nexport const Login = () => {\n    const loginData = useSelector(state => state.loginForm)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        // Call our fetch function below once the component mounts\n        // fetch('/express_backend')\n        //     .then(res => res.json())\n        //     .then(res => dispatch({type: 'UPDATE_DATA', data: res.express}))\n\n    }, [])\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        // fetch('http://localhost:4000/login', {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         'Authorization': `Bearer ${localStorage['authToken']}`,\n        //         'Accept': 'application/json' ,\n        //     },\n        //     body: JSON.stringify({\n        //         username: loginData.username,\n        //         password: loginData.password,\n        //         rememberUser: loginData.checkedBox\n        //     })\n        // }).then(res => res.json())\n        // .then(res => {\n        //     if(res.data){\n        //         console.log(res.data)\n        //         dispatch({type: 'SAVE_USER_DATA', data: res.data})\n        //         if(typeof(res.token) !== 'undefined') localStorage.setItem('authToken', res.token)\n        //         dispatch({type: 'LOGIN_FORM_CHANGE', key: 'formSubmitted', value: false})\n        //         history.push('/')\n        //     }else{\n        //         console.log(res.message)\n        //     }\n        // })\n            socket.emit('login', {\n                username: loginData.username,\n                password: loginData.password,\n                rememberUser: loginData.checkedBox\n            }).on('login', (res) => {console.loglog(res)})\n    }\n\n    return (\n        <div id=\"loginContainer\">\n            <p id=\"login-text\">Welcome, please log in or register below.</p>\n            <LoginForm \n                loginData={loginData} \n                handleLogin={handleLogin} \n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}