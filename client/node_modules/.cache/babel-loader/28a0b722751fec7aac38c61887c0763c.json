{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/home/Home.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // to handle state\n\nimport { Header, Icon, Segment } from 'semantic-ui-react'; // imports the semantic components\n\nimport socket from './../../socket.config'; // imports our socket\n\nimport { Statistics } from './Statistics'; // statistics component\n\nexport const Home = () => {\n  const dispatch = useDispatch(); // getting all of your friends from state\n\n  const fetchedFriends = useSelector(state => state.friends.fetchedFriends); // the token saved on the users browser where the user id is saved\n\n  const token = useSelector(state => state.token);\n  useEffect(() => {\n    console.log('token 2', token); // makes sure the friends aren't fetched already\n\n    if (!fetchedFriends) {\n      // sends a request to get all the friends and waits for the server to send a response\n      if (token !== null) console.log('token3');\n      socket.emit('get-friends', token).on('get-friends', data => {\n        console.log(data); // saves the fetched friends to the state\n\n        dispatch({\n          type: 'UPDATE_FRIEND_LIST',\n          friends: data\n        });\n      });\n    }\n  }, [token]); // renders the home page\n\n  if (token !== null) return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    icon: true,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"teal\",\n    name: \"user\",\n    circular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Profile\")), /*#__PURE__*/React.createElement(Segment, {\n    id: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Statistics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })));else {\n    // displays a loader if the fetch request hasn't been made yet\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui active red elastic large loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/home/Home.js"],"names":["React","useEffect","useDispatch","useSelector","Header","Icon","Segment","socket","Statistics","Home","dispatch","fetchedFriends","state","friends","token","console","log","emit","on","data","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAAuD;;AACvD,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,mBAAtC,C,CAA0D;;AAC1D,OAAOC,MAAP,MAAmB,uBAAnB,C,CAA2C;;AAC3C,SAASC,UAAT,QAA2B,cAA3B,C,CAA0C;;AAE1C,OAAO,MAAMC,IAAI,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CADsB,CAEtB;;AACA,QAAMS,cAAc,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,cAAxB,CAAlC,CAHsB,CAItB;;AACA,QAAMG,KAAK,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACE,KAAhB,CAAzB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB,EADY,CAEZ;;AACA,QAAG,CAACH,cAAJ,EAAmB;AACf;AACA,UAAGG,KAAK,KAAK,IAAb,EACIC,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,MAAAA,MAAM,CACLU,IADD,CACM,aADN,EACqBH,KADrB,EAECI,EAFD,CAEI,aAFJ,EAEoBC,IAAD,IAAU;AACzBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EADyB,CAEzB;;AACAT,QAAAA,QAAQ,CAAC;AAACU,UAAAA,IAAI,EAAE,oBAAP;AAA6BP,UAAAA,OAAO,EAAEM;AAAtC,SAAD,CAAR;AACH,OAND;AAQP;AACJ,GAhBQ,EAgBN,CAAEL,KAAF,CAhBM,CAAT,CAPsB,CAyBtB;;AACA,MAAGA,KAAK,KAAK,IAAb,EACI,oBACI;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,eAKI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ,CADJ,KAYI;AACA;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CA1CM","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux' // to handle state\nimport { Header, Icon, Segment } from 'semantic-ui-react' // imports the semantic components\nimport socket from './../../socket.config' // imports our socket\nimport { Statistics } from './Statistics' // statistics component\n\nexport const Home = () => {\n    const dispatch = useDispatch()\n    // getting all of your friends from state\n    const fetchedFriends = useSelector(state => state.friends.fetchedFriends)\n    // the token saved on the users browser where the user id is saved\n    const token = useSelector(state => state.token)\n    \n    useEffect(() => {\n        console.log('token 2', token)\n        // makes sure the friends aren't fetched already\n        if(!fetchedFriends){\n            // sends a request to get all the friends and waits for the server to send a response\n            if(token !== null)\n                console.log('token3')\n                socket\n                .emit('get-friends', token)\n                .on('get-friends', (data) => {\n                    console.log(data)\n                    // saves the fetched friends to the state\n                    dispatch({type: 'UPDATE_FRIEND_LIST', friends: data})\n                })\n                \n        }\n    }, [ token ])\n\n    // renders the home page\n    if(token !== null)\n        return (\n            <div id=\"home-container\">\n                <Header as='h2' icon textAlign='center'>\n                <Icon color='teal' name='user' circular />\n                    <Header.Content>Profile</Header.Content>\n                </Header>\n                <Segment id=\"stats-container\">\n                    <Statistics />\n                </Segment>\n            </div>\n        )\n    else{\n        // displays a loader if the fetch request hasn't been made yet\n        return <div className=\"ui active red elastic large loader\"></div>\n    }\n}"]},"metadata":{},"sourceType":"module"}