{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervancappellen/Desktop/messages/client/src/components/login/Login.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport history from '../../history';\nimport socket from '../../socket.config';\nimport { LoginForm } from './LoginForm'; // import {useSelector, useDispatch} from 'react-redux'\n\nexport const Login = () => {\n  const token = sessionStorage['authToken'];\n  const loginData = useSelector(state => state.loginForm);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on(\"unauthorized\", function (error, callback) {\n      if (error.data.type === \"UnauthorizedError\" || error.data.code === \"invalid_token\") {\n        // redirect user to login page perhaps or execute callback:\n        callback();\n        console.log(\"User's token has expired\");\n      }\n\n      if (token) history.push();\n    }, []); // .on('connected', () => {\n    //     socket.on('get-user-data', (data) => {\n    //         dispatch({type: 'SAVE_USER_DATA', data: data[0]})\n    //         history.push('/')\n    //     })\n    // })\n    // Call our fetch function below once the component mounts\n    // fetch('/express_backend')\n    //     .then(res => res.json())\n    //     .then(res => dispatch({type: 'UPDATE_DATA', data: res.express}))\n  }, []);\n\n  const handleLogin = e => {\n    e.preventDefault();\n    fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage['authToken']}`\n      },\n      body: JSON.stringify({\n        username: loginData.username,\n        password: loginData.password,\n        rememberUser: loginData.checkedBox\n      })\n    }).then(res => res.json()).then(res => {\n      if (res.data) {\n        console.log(res);\n        sessionStorage['authToken'] = res.token;\n        dispatch({\n          type: 'SAVE_USER_DATA',\n          data: res.data\n        });\n        if (typeof res.token !== 'undefined') localStorage.setItem('authToken', res.token);\n        dispatch({\n          type: 'LOGIN_FORM_CHANGE',\n          key: 'formSubmitted',\n          value: false\n        });\n        history.push('/');\n      } else {\n        console.log(res.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"login-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Welcome, please log in or register below.\"), /*#__PURE__*/React.createElement(LoginForm, {\n    loginData: loginData,\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/messages/client/src/components/login/Login.js"],"names":["React","useEffect","useDispatch","useSelector","history","socket","LoginForm","Login","token","sessionStorage","loginData","state","loginForm","dispatch","on","error","callback","data","type","code","console","log","push","handleLogin","e","preventDefault","fetch","method","headers","localStorage","body","JSON","stringify","username","password","rememberUser","checkedBox","then","res","json","setItem","key","value","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport history from '../../history'\nimport socket from '../../socket.config'\nimport { LoginForm } from './LoginForm'\n// import {useSelector, useDispatch} from 'react-redux'\n\nexport const Login = () => {\n    const token = sessionStorage['authToken']\n    const loginData = useSelector(state => state.loginForm)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        socket.on(\"unauthorized\", function(error, callback) {\n            if (error.data.type === \"UnauthorizedError\" || error.data.code === \"invalid_token\") {\n                // redirect user to login page perhaps or execute callback:\n                callback();\n                console.log(\"User's token has expired\");\n            }\n        if(token)\n            history.push()\n    }, [])\n            // .on('connected', () => {\n            //     socket.on('get-user-data', (data) => {\n            //         dispatch({type: 'SAVE_USER_DATA', data: data[0]})\n            //         history.push('/')\n            //     })\n            // })\n        // Call our fetch function below once the component mounts\n        // fetch('/express_backend')\n        //     .then(res => res.json())\n        //     .then(res => dispatch({type: 'UPDATE_DATA', data: res.express}))\n\n    }, [])\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:5000/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage['authToken']}`\n            },\n            body: JSON.stringify({\n                username: loginData.username,\n                password: loginData.password,\n                rememberUser: loginData.checkedBox\n            })\n        }).then(res => res.json())\n        .then(res => {\n            if(res.data){\n                console.log(res)\n                sessionStorage['authToken'] = res.token\n                dispatch({type: 'SAVE_USER_DATA', data: res.data})\n                if(typeof(res.token) !== 'undefined') localStorage.setItem('authToken', res.token)\n                dispatch({type: 'LOGIN_FORM_CHANGE', key: 'formSubmitted', value: false})\n                history.push('/')\n            }else{\n                console.log(res.message)\n            }\n        })\n    }\n\n    return (\n        <div id=\"loginContainer\">\n            <p id=\"login-text\">Welcome, please log in or register below.</p>\n            <LoginForm \n                loginData={loginData} \n                handleLogin={handleLogin} \n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}